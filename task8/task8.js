// Задача о коллекции функций: у вас есть массив функций, напишите код, который вызовет каждую функцию в этом массиве и выведет их порядковый номер. Однако, вызов каждой функции должен происходить только после вызова предыдущей функции.
// Другими словами, нужно выполнить следующие шаги:
// Вызвать первую функцию из массива.
// После завершения работы первой функции вызвать вторую функцию.
// После завершения работы второй функции вызвать третью функцию.
// И так далее, пока все функции в массиве не будут вызваны по порядку.

const arrayFunc = [
	(funcOne = () => {
		return new Promise((resolve) => {
			setTimeout(() => {
				resolve("One")
			}, 0)
		})
	}),
	(funcTwo = () => {
		return new Promise((resolve) => {
			setTimeout(() => {
				resolve("Two")
			}, 10)
		})
	}),
	(funcThree = () => {
		return new Promise((resolve) => {
			setTimeout(() => {
				resolve("Three")
			}, 100)
		})
	}),
]

const callAllFunction = async (arr) => {
	// возвращаем анонимную асинхронную функцию
	return (async function () {
		// создаем массив, куда будем складывать результаты вызовов функций
		let arrRes = []
		//  перебираем все функции в массиве
		for (let func of arr) {
			//  присваиваем переменной значение которое возвращает функция
			const res = await func()
			//  добавляет это значение в массив
			arrRes.push(res)
		}
		return arrRes
	})()
}
//так как функци возвращает промис нужно достать результа с помощью метода then
callAllFunction(arrayFunc).then((res) => console.log(res))
